# Generated by Django 4.2.4 on 2023-08-22 03:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('todos', '0008_upnextlabel'),
    ]

    operations = [
        migrations.CreateModel(
            name='RankOrderMetadata',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('closest_rank_min', models.BigIntegerField(null=True)),
                ('closest_rank_max', models.BigIntegerField(null=True)),
                ('closest_rank_distance', models.BigIntegerField(null=True)),
                ('closest_rank_steps', models.IntegerField(null=True)),
                ('last_rebalanced_at', models.DateTimeField(null=True)),
                ('last_rebalance_duration', models.FloatField(null=True)),
                ('max_rank', models.BigIntegerField(null=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='historicaltodomodel',
            options={
                'get_latest_by': ('history_date', 'history_id'),
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical todo model',
                'verbose_name_plural': 'historical todo models'
            },
        ),
        migrations.AlterModelOptions(
            name='todomodel',
            options={'ordering': ['order_rank', 'created_at']},
        ),
        migrations.AddField(
            model_name='historicaltodomodel',
            name='order_rank',
            field=models.BigIntegerField(null=True),
        ),
        migrations.AddField(
            model_name='todomodel',
            name='order_rank',
            field=models.BigIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='historicaltodomodel',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.CreateModel(
            name='HistoricalRankOrderMetadata',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('closest_rank_min', models.BigIntegerField(null=True)),
                ('closest_rank_max', models.BigIntegerField(null=True)),
                ('closest_rank_distance', models.BigIntegerField(null=True)),
                ('closest_rank_steps', models.IntegerField(null=True)),
                ('last_rebalanced_at', models.DateTimeField(null=True)),
                ('last_rebalance_duration', models.FloatField(null=True)),
                ('max_rank', models.BigIntegerField(null=True)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True,
                                   on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rank order metadata',
                'verbose_name_plural': 'historical rank order metadatas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
