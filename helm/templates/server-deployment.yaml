{{/*
Server Env
*/}}
{{- define "..serverEnv" -}}
{{- $fullName := include "..fullname" . -}}
- name: DB_NAME
  value: {{ $fullName }}
- name: DB_USER
  value: {{ $fullName }}
- name: DB_PASSWORD
  valueFrom:
    secretKeyRef:
      name: {{ $fullName }}-server
      key: db-password
- name: SECRET_KEY
  valueFrom:
    secretKeyRef:
      name: {{ $fullName }}-server
      key: secret-key
{{- if eq .Values.environment "DEV" }}
- name: DEBUG
  value: 'true'
{{- end }}
{{- end }}

{{- $fullName := include "..fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-server
  labels:
    {{- include "..serverLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "..serverSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "..serverSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "..serviceAccountName" . }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ $fullName }}-server
        - name: staticfiles
          emptyDir: {}
      initContainers:
        - name: collectstatic
          image: {{ printf "gcr.io/%s/chalk-server:%s" .Values.gcpProject .Values.imageTag | quote }}
          imagePullPolicy: Always
          command: ["python", "manage.py", "collectstatic", "--noinput"]
          volumeMounts:
            - name: staticfiles
              mountPath: /var/www/html/
          env:
            {{- include "..serverEnv" . | nindent 12 }}
      containers:
        - name: server-cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:latest
          command:
            - "/cloud_sql_proxy"
            - {{ printf "-instances=%s:us-east4:%s=tcp:5432" .Values.gcpProject (include "..dbInstanceName" .) | quote }}
          securityContext:
            runAsNonRoot: true
        - name: server-nginx
          image: nginx:stable
          imagePullPolicy: Always
          ports:
            - name: nginx-http
              containerPort: 8002
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
            - name: staticfiles
              mountPath: /var/www/html/
          readinessProbe:
            httpGet:
              path: /admin_static/rest_framework/css/default.css
              port: nginx-http
          livenessProbe:
            httpGet:
              path: /admin_static/rest_framework/css/default.css
              port: nginx-http
          resources:
            requests:
              cpu: 10m
        - name: server
          image: {{ printf "gcr.io/%s/chalk-server:%s" .Values.gcpProject .Values.imageTag | quote }}
          imagePullPolicy: Always
          env:
            {{- include "..serverEnv" . | nindent 12 }}
          ports:
            - name: http
              containerPort: 8003
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/todos/todos/
              port: http
          readinessProbe:
            httpGet:
              path: /api/todos/todos/
              port: http
